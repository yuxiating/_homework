题目描述
###############################################BEGIN
描述
有一个正方形的墙，由N*N个正方形的砖组成，其中一些砖是白色的，另外一些砖是黄色的。Bob是个画家，想把全部的砖都涂成黄色。
但他的画笔不好使。当他用画笔涂画第(i, j)个位置的砖时， 位置(i-1, j)、 (i+1, j)、 (i, j-1)、 (i, j+1)上的砖都会改变颜色。
请你帮助Bob计算出最少需要涂画多少块砖，才能使所有砖的颜色都变成黄色。

输入
第一行是一个整数n (1≤n ≤15)，表示墙的大小。接下来的n行表示墙的初始状态。每一行包含n个字符。第i行的第j个字符表示位于位置(i,j)上的砖的颜色。
“w”表示白砖，“y”表示黄砖。
输出
一行，如果Bob能够将所有的砖都涂成黄色，则输出最少需要涂画的砖数，否则输出“inf”。
样例输入
5
wwwww
wwwww
wwwww
wwwww
wwwww
样例输出
15 
###############################################END

代码展示
###############################################BEGIN
#include<iostream>
#include<string>
using namespace std;
int main(){
	int brid[16][16] = { 0 };
	string s;
	int n;
	cin >> n;
	for (int i = 0; i < n; i++){
		cin >> s;
		for (int j=0;j<n;j++)
			if (s[j] == 'w')
				brid[i][j] = 1;
	}
	int brid2[16][16];
	int answer = 1000000;
	for (int i = 0; i < (1<<n); i++){
		int ans = 0;
		for (int row = 0; row < n; row++)
			for (int col = 0; col < n; col++)
				brid2[row][col] = brid[row][col];
				
		for (int row = 0; row < n; row++)
			for (int col = 0; col < n; col++){
				if (row == 0){
					int ff = 0;
					if ((i & (1 << col))) { ans++; ff = 1; }
					brid2[row][col] = (brid2[row][col] + ff) % 2;
					if (row - 1 >= 0)
						brid2[row - 1][col] = (brid2[row - 1][col] + ff) % 2;
					if (row + 1 < n)
						brid2[row + 1][col] = (brid2[row + 1][col] + ff) % 2;
					if (col - 1 >= 0)
						brid2[row][col - 1] = (brid2[row][col - 1] + ff) % 2;
					if (col + 1 < n)
						brid2[row][col + 1] = (brid2[row][col + 1] + ff) % 2;
				}
				else if (brid2[row - 1][col] == 1){
						ans++;
						brid2[row][col] = (brid2[row][col] + 1) % 2;
						brid2[row - 1][col] = 0;
						if (row + 1 < n)
							brid2[row + 1][col] = (brid2[row + 1][col] + 1) % 2;
						if (col - 1 >= 0)
							brid2[row][col - 1] = (brid2[row][col - 1] + 1) % 2;
						if (col + 1 < n)
							brid2[row][col + 1] = (brid2[row][col + 1] + 1) % 2;
					}
			}
		int flag = 1;
		for (int j = 0; j < n; j++)
			if (brid2[n - 1][j] == 1){
				flag = 0;
				break;
			}
		if (flag){
			if(ans<answer)
			answer =  ans;
		}	
	}
	if (answer == 1000000)
		cout << "inf" << endl;
	else
		cout << answer << endl;
	return 0;
}
###############################################END
