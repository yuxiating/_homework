问题描述：
################################################BEGIN
描述
一个工厂制造的产品形状都是长方体，它们的高度都是h，长和宽都相等，一共有六个型号，他们的长宽分别为1*1, 2*2, 3*3, 4*4, 5*5, 6*6。
这些产品通常使用一个 6*6*h 的长方体包裹包装然后邮寄给客户。因为邮费很贵，所以工厂要想方设法的减小每个订单运送时的包裹数量。他们很
需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。

输入
输入文件包括几行，每一行代表一个订单。每个订单里的一行包括六个整数，中间用空格隔开，分别为1*1至6*6这六种产品的数量。输入文件将以6
个0组成的一行结尾。

输出
除了输入的最后一行6个0以外，输入文件里每一行对应着输出文件的一行，每一行输出一个整数代表对应的订单所需的最小包裹数。

样例输入
0 0 4 0 0 1 
7 5 1 0 0 0 
0 0 0 0 0 0 
样例输出
2 
1 

代码展示
################################################BEGIN
#include<iostream>
using namespace std;

int main()
{
	int n1, n2, n3, n4, n5, n6;
	while(cin >> n1 >>n2 >> n3 >> n4 >> n5 >> n6)
	{
		if(n1 + n2 + n3 + n4 + n5 + n6 == 0)break;
		int num = n6 + n5 + n4 + (n3 + 3)/4;
		int need2 = n4 * 5;
		if(n3 % 4 == 3)need2++;
		if(n3 % 4 == 2)need2 += 3;
		if(n3 % 4 == 1)need2 += 5;
		
		if(need2 < n2)
		num += (n2 - need2 + 8) / 9;
		
		int need1 = 36* num - 36*n6 -25*n5 - 16*n4 - 9*n3 - 4*n2; 
		if(need1 < n1)
		num += (n1 - need1 + 35) / 36;
		cout << num << endl; 
	}
	return 0; 
}
################################################END
