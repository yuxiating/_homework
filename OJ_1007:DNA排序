题目描述
#######################################BEGIN
描述
现在有一些长度相等的DNA串（只由ACGT四个字母组成），请将它们按照逆序对的数量多少排序。
逆序对指的是字符串A中的两个字符A[i]、A[j]，具有i < j 且 A[i] > A[j] 的性质。如字符串”ATCG“中，T和C是一个逆序对，T和G是另一个逆序对，
这个字符串的逆序对数为2。

输入
第1行：两个整数n和m，n(0<n<=50)表示字符串长度，m(0<m<=100)表示字符串数量

第2至m+1行：每行是一个长度为n的字符串
输出
按逆序对数从少到多输出字符串，逆序对数一样多的字符串按照输入的顺序输出。
样例输入
10 6
AACATGAAGG
TTTTGGCCAA
TTTGGCCAAA
GATCAGATTT
CCCGGGGGGA
ATCGATGCAT
样例输出
#######################################END

代码展示
#######################################BEGIN
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
#define MAX 100+2
struct DNA
{
	int num;
	string dna;
	void Getnum()
	{
		num=0;
		for(int i = 0; i < dna.length(); i++)
			for(int j = i + 1;j < dna.length(); j++)
				if(dna[i] > dna[j]) num++;
	}
	DNA(){}
	bool operator < (const DNA& anotherDNA)const
	{
		if(num < anotherDNA.num)return true;
		return false;
	}
}DNAS[MAX];
int main()
{
	int n, m;
	cin>> n >> m;
	string dna;
	for(int i = 0; i < m; i++)
	{
		cin >> DNAS[i].dna;
		DNAS[i].Getnum();
	}
	sort(DNAS, DNAS + m);
	
	for(int i = 0; i < m; i++)
		cout << DNAS[i].dna << endl;
	return 0; 
}
#######################################END
